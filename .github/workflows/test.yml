name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - 1.0.0
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: cargo test --verbose

  no_std:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
    - uses: actions/checkout@v2
    - name: Install toolchain
      run: rustup target add thumbv6m-none-eabi
    - name: Build
      run: cargo build --target thumbv6m-none-eabi --verbose

  codecov:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: clean
    - name: Install grcov
      uses: actions-rs/install@v0.1
      with:
        crate: grcov
        version: latest
        use-tool-cache: true
    - uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --no-fail-fast
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    - name: Generate coverage data
      id: grcov
      # uses: actions-rs/grcov@v0.1
      run: |
        grcov target/debug/ \
            --branch \
            --llvm \
            --source-dir . \
            --output-path lcov.info \
            --ignore='/**' \
            --ignore='C:/**' \
            --ignore='../**' \
            --ignore-not-existing \
            --excl-line "#\\[derive\\(" \
            --excl-br-line "#\\[derive\\(" \
            --excl-start "#\\[cfg\\(test\\)\\]" \
            --excl-br-start "#\\[cfg\\(test\\)\\]" \
            --commit-sha ${{ github.sha }} \
            --service-job-id ${{ github.job }} \
            --service-name "GitHub Actions" \
            --service-number ${{ github.run_id }}
    - name: Upload coverage to codecov.io
      uses: codecov/codecov-action@v1
      with:
        file: lcov.info
        fail_ci_if_error: true
